{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api-crona/api-crona.component.ts","webpack:///src/app/api-crona/api-crona.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cronaData.model.ts","webpack:///src/app/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiCronaComponent","dataservice","CronaDataSelected","CronaDataSelectedNew","now","Date","setInterval","getCronaData","subscribe","res","CronaData","item","tackSelect","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","CronaVireus","country","countryInfo","subcountryInfo","cases","todayCases","deaths","todayDeaths","recovered","active","critical","casesPerOneMillion","deathsPerOneMillion","_id","iso2","iso3","lat","flag","DataService","http","_Cronaurl","_CronaurlWorled","get","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../data.service';\nimport { CronaVireus } from '../cronaData.model';\n\n\n@Component({\n  selector: 'crona',\n  templateUrl: './api-crona.component.html',\n  styleUrls: ['./api-crona.component.css']\n})\nexport class ApiCronaComponent implements OnInit {\n\n  CronaData : CronaVireus[];\n  CronaDataSelected = new CronaVireus();\n  CronaDataSelectedNew = new CronaVireus(); // that what i will use to Binding Data\n\n  public now: Date = new Date();\n \n  constructor(private dataservice: DataService) {\n      setInterval(() => {\n        this.now = new Date();\n      }, 1);\n  }\n  ngOnInit() {\n    this.dataservice.getCronaData()\n    .subscribe(res => {\n      this.CronaData = res\n    });\n\n    // Get World Crona Data\n\n    // this.dataservice.getCronaDataToWholeWorled()\n    // .subscribe(response => {\n    //   // this.CronaData = res\n    //   this.CronaDataSelectedNew = response;\n    //   console.log(response)\n    // });\n  }\n  getSelected(item){\n    this.CronaDataSelected = item;\n  }\n  tackSelect(){\n    this.CronaDataSelectedNew = this.CronaDataSelected;\n  }\n\n}\n","<div class=\"size1 bg0 where1-parent\">\n\n\n    <!-- Counter -->\n    <div class=\"flex-c-m bg-img1 size2 where1 overlay1 where2 respon2\"\n        style=\"background-image: url('assets/images/bg01.jpg');\">\n        <div class=\"wsize2 flex-w flex-c-m cd100 js-tilt\">\n            <h3 class=\"s2-txt4 timeClass\">\n                {{now | date : 'd/M/yyyy , h:mm:ss a'}}\n            </h3>\n            <h3 class=\"s2-txt4\" style=\"color: #fff;padding: 5px 0 0px 0;\">(COVID-19)\n                - أحصائيات فيرس كرونا\n                <br>\n                <br>\n                <span class=\"flex-w justify-content-center\">\n                    [\n                    {{ CronaDataSelectedNew.country}}\n                    <img [src]=\"CronaDataSelectedNew.countryInfo.flag\" alt=\"\"\n                        class=\"flag\">\n                    ]\n                </span>\n                <br>\n                <!-- <p class=\"flex-w justify-content-center\">\n                    <img src=\"assets/images/icons/eg.png\" alt=\"\" class=\"flag\">\n                </p> -->\n            </h3>\n\n            <div class=\"flex-col-c-m size6 bor2 m-l-10 m-r-10 m-t-15\"\n                style=\"border-color: #57b846;\">\n                <span class=\"l2-txt1 p-b-9 hours\">{{\n                    CronaDataSelectedNew.cases}}</span>\n                <span class=\"s2-txt4\">حالات الشفاء</span>\n            </div>\n\n            <div class=\"flex-col-c-m size6 bor2 m-l-10 m-r-10 m-t-15\"\n                style=\"border-color: #004cdf;\">\n                <span class=\"l2-txt1 p-b-9 days\">{{\n                    CronaDataSelectedNew.recovered}}</span>\n                <span class=\"s2-txt4\">حالات الاصابة </span>\n            </div>\n\n            <div class=\"flex-col-c-m size6 bor2 m-l-10 m-r-10 m-t-15\"\n                style=\"border-color: red;\">\n                <span class=\"l2-txt1 p-b-9 minutes\">{{\n                    CronaDataSelectedNew.deaths}}</span>\n                <span class=\"s2-txt4\">حالات الوفاة</span>\n            </div>\n\n\n        </div>\n    </div>\n\n    <!-- Form -->\n    <div class=\"size3 flex-col-sb flex-w p-l-75 p-r-75 p-t-45 p-b-45 respon1\">\n        <div class=\"wrap-pic1\">\n            <img src=\"assets/images/icons/covid19.jpeg\" alt=\"LOGO\">\n            <p class=\"text-center m1-txt3\">( COVID-19 )</p>\n        </div>\n\n        <div class=\"p-t-50 p-b-13\">\n            <p class=\"m1-txt1 p-b-12\">\n                <!-- Stay Home , <span class=\"m1-txt2\">Stay Safe</span>-->\n                تابع معانا آخر الإحصائيات\n            </p>\n            <form class=\"contact100-form validate-form\" #f=\"ngForm\">\n                <mat-form-field>\n                    <mat-label>الدولة </mat-label>\n                    <mat-select class=\"m-b-10 s2-txt1\" tyle=\"height: 45px;\n                        cursor: pointer;\">\n                        <mat-option *ngFor=\"let item of CronaData\"\n                            [value]=\"item\" (click)=\"getSelected(item)\">\n                            <img src={{item.countryInfo.flag}} alt=\"\"\n                                style=\"width: 50px; margin-right: 12px;\">\n                            {{item.country}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n\n\n                <div class=\"w-full\">\n                    <button class=\"flex-c-m s2-txt2 size4 bg1 bor1 hov1\n                        trans-04\" (click)=\"tackSelect()\">\n                        ابحث\n                    </button>\n                </div>\n            </form>\n            \n            <p class=\"s2-txt3 p-t-18\">\n                <!-- And don’t worry, You can Look for any country you want to check\n                on at\n                anytime. -->\n                . لا يوجد حالياً دواء محدد للوقاية من فيروس كورونا (كوفيد-19) -\n                <br>\n                ! كن جزءًا من المهمة ضد فيروس كورونا -\n\n            </p>\n            <strong class=\"text-center\" style=\"text-align:\n                right;display: block;\">\n                <span class=\"info\">لمزيد من المعلومات والاستفسار </span>\n                <br>\n                <span class=\"hotline\"> الخط الساخن</span>\n                <br>\n                <span class=\"hotline-105\">105</span>\n                <br>\n                <span class=\"hotline-15335\">15335</span>\n            </strong>\n        </div>\n\n        <div class=\"flex-w justify-content-center\">\n            <a href=\"https://www.facebook.com/profile.php?id=100002199107595\" class=\"flex-c-m size5 bg3 how1 trans-04 m-r-5\">\n                <i class=\"fa fa-facebook\"></i>\n            </a>\n\n            <a href=\"https://www.linkedin.com/in/mahmoud-ahmed-928787118/\" class=\"flex-c-m size5 bg4 how1 trans-04 m-r-5\">\n                <i class=\"fa fa-linkedin\"></i>\n            </a>\n\n            <a href=\"https://www.instagram.com/mhmoud_a7med/\" class=\"flex-c-m size5 bg5 how1 trans-04 m-r-5\">\n                <i class=\"fa fa-instagram\"></i>\n            </a>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './data.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  \n  constructor(private dataservice: DataService) { }\n\n  ngOnInit() {}\n  \n}\n","<crona></crona>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http'\nimport { DataService } from './data.service';\nimport { ApiCronaComponent } from './api-crona/api-crona.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {  MatSelectModule } from '@angular/material/select';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApiCronaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    NgxMatSelectSearchModule,\n    MatAutocompleteModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class CronaVireus {\r\n    country: string = '';\r\n    countryInfo: subcountryInfo = new subcountryInfo;\r\n    cases: number = 0;\r\n    todayCases: number = 0;\r\n    deaths: number = 0;\r\n    todayDeaths: number = 0;\r\n    recovered: number = 0;\r\n    active: number = 0;\r\n    critical: number = 0;\r\n    casesPerOneMillion: number = 0;\r\n    deathsPerOneMillion: number = 0;\r\n}\r\nexport class subcountryInfo {\r\n    _id: number = 0;\r\n    country: string = '';\r\n    iso2: string = '';\r\n    iso3: string = '';\r\n    lat: number = 0;\r\n    long: number = 0;\r\n    flag: string = '';\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CronaVireus } from './cronaData.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  _Cronaurl = \"https://corona.lmao.ninja/countries\";\n  _CronaurlWorled = \"https://corona.lmao.ninja/all\";\n\n\n  constructor(private http: HttpClient) { }\n  \n   // For Get Data About CronaVireus\n  getCronaData()  {\n    return this.http.get<CronaVireus[]>(this._Cronaurl);\n  }\n    // For Get Data About CronaVireus\n    getCronaDataToWholeWorled()  {\n      return this.http.get<CronaVireus[]>(this._CronaurlWorled);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}